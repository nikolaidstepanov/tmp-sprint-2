services:
  configSrv-1:
    image: mongo:latest
    container_name: configSrv-1
    ports:
      - "27017:27017"
    command:
      [
        "--configsvr",
        "--replSet", "config_server",
        "--bind_ip_all",
        "--port", "27017"
      ]
    volumes:
      - config-1-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27017", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mongo-network
    
  configSrv-2:
    image: mongo:latest
    container_name: configSrv-2
    ports:
      - "27018:27018"
    command:
      [
        "--configsvr",
        "--replSet", "config_server",
        "--bind_ip_all",
        "--port", "27018"
      ]
    volumes:
      - config-2-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mongo-network

  shard1-1:
    image: mongo:latest
    container_name: shard1-1
    ports:
      - "27021:27021"
    command:
      [
        "--shardsvr",
        "--replSet", "rs-shard1",
        "--bind_ip_all",
        "--port", "27021"
      ]
    volumes:
      - shard1-1-data:/data/db
    links:
      - shard1-2
      - shard1-3
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27021", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
    networks:
      - mongo-network
  
  shard1-2:
    image: mongo:latest
    container_name: shard1-2
    ports:
      - "27022:27022"
    command:
      [
        "--shardsvr",
        "--replSet", "rs-shard1",
        "--bind_ip_all",
        "--port", "27022"
      ]
    volumes:
      - shard1-2-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27022", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
    networks:
      - mongo-network
  
  shard1-3:
    image: mongo:latest
    container_name: shard1-3
    ports:
      - "27023:27023"
    command:
      [
        "--shardsvr",
        "--replSet", "rs-shard1",
        "--bind_ip_all",
        "--port", "27023"
      ]
    volumes:
      - shard1-3-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27023", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
    networks:
      - mongo-network

  shard2-1:
    image: mongo:latest
    container_name: shard2-1
    ports:
      - "27024:27024"
    command:
      [
        "--shardsvr",
        "--replSet", "rs-shard2",
        "--bind_ip_all",
        "--port", "27024"
      ]
    volumes:
      - shard2-1-data:/data/db
    links:
      - shard2-2
      - shard2-3
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27024", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
    networks:
      - mongo-network
  
  shard2-2:
    image: mongo:latest
    container_name: shard2-2
    ports:
      - "27025:27025"
    command:
      [
        "--shardsvr",
        "--replSet", "rs-shard2",
        "--bind_ip_all",
        "--port", "27025"
      ]
    volumes:
      - shard2-2-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27025", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
    networks:
      - mongo-network

  shard2-3:
    image: mongo:latest
    container_name: shard2-3
    ports:
      - "27026:27026"
    command:
      [
        "--shardsvr",
        "--replSet", "rs-shard2",
        "--bind_ip_all",
        "--port", "27026"
      ]
    volumes:
      - shard2-3-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27026", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
    networks:
      - mongo-network

  mongos-router-1:
    image: mongo:latest
    container_name: mongos-router-1
    ports:
      - "27019:27019"
    command:
      [
        "mongos",
        "--configdb", "config_server/configSrv-1:27017,configSrv-2:27018",
        "--bind_ip_all",
        "--port", "27019"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27019", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
    networks:
      - mongo-network
    
  mongos-router-2:
    image: mongo:latest
    container_name: mongos-router-2
    ports:
      - "27020:27020"
    command:
      [
        "mongos",
        "--configdb", "config_server/configSrv-1:27017,configSrv-2:27018",
        "--bind_ip_all",
        "--port", "27020"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27020", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
    networks:
      - mongo-network

  redis_cache:
    image: "redis:latest"
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - redis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  api_app:
    build:
      context: ./api_app
    container_name: api_app
    ports:
      - "8080:8080"
    environment:
      MONGODB_URL: mongodb://mongos-router-1:27019,mongos-router-2:27020
      MONGODB_DATABASE_NAME: somedb
      REDIS_URL: redis://redis_cache:6379
    depends_on:
      redis_cache:
        condition: service_healthy
    networks:
      - mongo-network
      - redis-network

volumes:
  config-2-data:
  config-1-data:
  shard1-1-data:
  shard1-2-data:
  shard1-3-data:
  shard2-1-data:
  shard2-2-data:
  shard2-3-data:
  redis_data:

networks:
  mongo-network:
    driver: bridge
  redis-network:
    driver: bridge
  